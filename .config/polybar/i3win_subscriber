#!/bin/bash
# ///// Defines /////
onclick="bash ~/.config/polybar/i3win_onclick"
normal_bg=#ff1f1f1f
focused_bg=#ff555555
urgent_bg=#70f29633
app_spacing=7

# ///// Functions /////
new_win () {
  case $win_name in
    *"polybar"* | "taskman_ignore")
      return ;;

    # both "class" from poll_curr_win (after a i3 reset) and "title" (upon opening a new win) from the i3 event subscriber have to be accounted for...
    #  see i3_subscriber_HELPER for the appropriate $win_name to use below (run "bash i3_subscriber_HELPER")
    "UXTerm" | "uxterm" | "XTerm" | "xterm" |  "URxvt" | "urxvt")
      icon_char="X" ;;

    "Pavucontrol" | "Volume Control")
      icon_char="4" ;;

    "nmtui" | "Network Connections" | "Nm-connection-editor" | "scanned_wifis")
      icon_char="@" ;;

    "Bluetooth Devices" | "Blueman-manager")
      icon_char="D" ;;

    "settuings" | "Customize Look and Feel" | "Lxappearance")
      icon_char="'" ;;

    "feh"* | "Save screenshot" | "Flameshot")
      icon_char="T" ;;

    "MPV" | *"mpv")
      icon_char="U" ;;

    "$USER" | "Pcmanfm" | "pcmanfm")
      icon_char="V" ;;

    "Removable medium is inserted")
      icon_char="*" ;;

    *"Firefox" | "firefox-esr" | "Library")
      icon_char="Z" ;;

    "Save As")
      icon_char="A" ;;

    *"VSCodium")
      icon_char="Y" ;;

    "taskman")
      icon_char="(" ;;

    "nanoedit")
      icon_char="W" ;;

    "SimulIDE"* | "simulide")
      icon_char="]" ;;

    "Audacity")
      icon_char="b" ;;

    *"Discord"* | "discord")
      icon_char="f" ;;

    "OBS"* | "obs")
      icon_char="a" ;;

    *"REAPER"*)
      icon_char="c" ;;

    "scrcpy")
      icon_char="g" ;;

    *"SNES SPC700 Player" | "spcplay.exe")
      icon_char="M" ;;

    *)
      icon_char="[" ;;
  esac

  labels[$win_id]="%{A1:$onclick $win_id focus:}%{A6:$onclick $win_id minimize:}%{A2:$onclick $win_id close:}%{A3:$onclick $win_id menu:}%{B$normal_bg}%{O$app_spacing}$icon_char%{O$app_spacing}%{B-}%{A}%{A}%{A}%{A}"
}

print2bar () {
  # deletes all whitespaces, including the ones in polybar's action tags ( %{A} ), which would break them
  #printf "%s\n" "$(tr -d ' ' <<< "${labels[*]}")"
  printf "%s" "${labels[@]}"
  printf "\n"
}

poll_curr_win () {
  win_list=($(xprop -root _NET_CLIENT_LIST | cut -c 39- | tr -d ','))
  for id in "${win_list[@]}"; do
    win_id=$(( $id ))
    win_name=$(xprop -id $id WM_CLASS | cut -d '"' -f 4)

    [[ $win_id -gt 0 ]] && new_win
  done
  win_list=()
}



# ///// Initialization /////
declare -A labels=()
last_focused=-1

poll_curr_win
(( ${#labels[@]} )) && print2bar

# ///// Main behaviour, event-based /////
i3-msg -t subscribe -m '[ "window" ]' | while read str; do 
  event=$(cut -c 12- <<< "$str")
  win_id=${event#*window\":}
  win_name=${win_id#*title\":\"}

  event=${event%%\"*}
  win_id=${win_id%%,*}
  win_name=${win_name%%\"*}

  case $event in
    "new")
      new_win
    ;;

    "close")
      declare -A labels_tmp
      for key in "${!labels[@]}"; do [[ $key != $win_id ]] && labels_tmp[$key]=${labels[$key]}; done
      unset labels
      for k in "${!labels_tmp[@]}"; do labels[$k]=${labels_tmp[$k]}; done
      unset labels_tmp

      [[ $minimized_win == *$win_id* ]] && minimized_win=${minimized_win/+( )$win_id}
    ;;

    "focus")
      [[ $last_focused != -1 ]] && labels[$last_focused]="${labels[$last_focused]/"#"????????/$normal_bg}"
      labels[$win_id]="${labels[$win_id]/"#"????????/$focused_bg}"
      last_focused=$win_id
    ;;

    "urgent")
      labels[$win_id]="${labels[$win_id]/"#"????????/$urgent_bg}"
    ;;

    "move")
      poll_curr_win
    ;;
  esac

  print2bar
done
